/*
 * This configuration is used by the com.sun.jini.start utility to start a
 * ProvisionMonitor, including an embedded Webster, JMX Connector Service and
 * a Jini Lookup Service
 */
import java.net.URL;
import org.rioproject.boot.BootUtil;
import org.rioproject.boot.ServiceDescriptorUtil;
import com.sun.jini.config.ConfigUtil;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;

com.sun.jini.start {
    jiniLibPath = "${JINI_HOME}/lib";
    jiniLibDLPath = "${JINI_HOME}/lib-dl";
    rioLibPath = "${RIO_HOME}/lib";
    deployDir = "${RIO_HOME}/deploy";
    policy = "${RIO_HOME}/policy/policy.all";
     spring = "/Users/dreedy/dev/src/spring/spring-framework-2.5.6";

    reggieConfig = "${RIO_HOME}/config/reggie.config";
    monitorConfig = "${RIO_HOME}/config/monitor.config";

    serviceDescriptors = new ServiceDescriptor[] {
        /* Rio Webster, set to serve up 3 directories */
        ServiceDescriptorUtil.getWebster(policy,
                                         "9010",
                                         new String[] {jiniLibDLPath,";",
                                                       jiniLibPath,";",
                                                       rioLibPath, ";",
                                                       spring,";",
                                                       deployDir}),
        /* Jini Lookup Service */
        ServiceDescriptorUtil.getLookup(policy, reggieConfig),

        /* Rio Provision Monitor */
        ServiceDescriptorUtil.getMonitor(policy, monitorConfig)
    };    

}
