import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.config.ConfigUtil;

// Starts up Blitz in non-activatable mode with an embedded httpd to save
// starting it up separately from the command-line.  Several people suggested
// this change:  Ussama Baggili, Olaf Bergner.
//
com.sun.jini.start {
        private static codebasePort = "9010";

        private static codebase = ConfigUtil.concat(new Object[] {
            "http://", ConfigUtil.getHostName(), ":", codebasePort, "/",
            "blitz-dl.jar"});

        // Should be updated by installer
        // JINI 2.0 libs should be in this directory
        private static jiniRoot = "C:/IvoryCloud/lib/apache-river/lib/";


        // The directory where you installed Blitz
        //
        private static blitzRoot = "C:/IvoryCloud/";

        private static blitzLib = ConfigUtil.concat(new Object[] {
                                    blitzRoot, "lib/"
                                  });


        private static separator = System.getProperty("path.separator");

        static classpath = ConfigUtil.concat(new Object[] {
            blitzLib, "jsk-lib.jar",
 		separator, blitzLib, "sun-util.jar", 
		separator, blitzLib, "je.jar",
		separator, blitzLib, "backport-util-concurrent60.jar",
 		separator, blitzLib, "blitz.jar"});

        private static config = ConfigUtil.concat(new Object[] {
            blitzRoot, "config/transient-blitz.config"});

        private static policy = ConfigUtil.concat(new Object[] {
            blitzRoot, "config/policy.all"});

        static serviceDescriptors = new ServiceDescriptor[] {
               
                 // Blitz
                 new NonActivatableServiceDescriptor(
                        codebase, 
			policy, 
			classpath,
                        "org.dancres.blitz.remote.BlitzServiceImpl",
                         new String[] { config }
        )};
}
